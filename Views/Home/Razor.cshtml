@{
    ViewData["Title"] = "Razor";
}

<div>
    <h1 class="display-4">@ViewData["Title"]</h1>
</div>
<p>
    Razor - инструмент для внедрения кода C# в HTML
    Для чего? HTML из-за исторических причин имеет ряд ограничений, главные из которых -
    отсутсвие условных блоков, которые верстаются (или не верстаются) в
    соотвествии со значениями определенных выражений; отсутствие самих выражений,
    а так же инструкции повторений (циклов).
</p>
<p>
    Основу синтаксиса составляет инструкция &commat;, из-за этого сам символ '&commat;' 
    создает ошибки компиляции и в розметке должен быть заменен сущностью <b>&amp;commat;</b>
</p>
<p>
    Code Blocks: блок инструкции (statements) составленые языком C#.
    Блок задаётся как &commat;,{...}
    Блоки кода никак не отображаются в розметке, только выполняют инструкции.
</p>
@{
    Random rnd = new();
    int x = rnd.Next(3, 15);
    String str = "This is a string";
}
<p>
    Выражения (expressions) - инструкции, которые имеют результат. Выражения Razor
    это команды вывода (печати) результа выражения.
    Неявные (inplicit) выражения: &connat;Виражение, например &commat;x= @x
    В неявных выражениях есть определенные ограничения: <br />
    выражения, схожие по форме с E-mail адресами: str-length@str.Length <br />
    выражения-generic, у них тпизация воспринимается как тэг &connat;List&lt;int>&lt;/int>
    выражения с операторами: &commat;x - 1 = @x - 1 <br />
    Другие формы сложных выражений.
</p>
<p>
    Явные выражения - используют круглые скобки для обозначения границ выражения:
    &commat;(...)<br />
    str-length@str.Length &rarr; str-length@(str.Length) <br />
    &commat;x - 1 = @(x - 1) <br />
</p>
<p>
    Условные конструкции: &commat;if и &commat;switch <br />
    В документ попадет только один из блоков, описанных в операторах
    (не прятанье другого блока, а его отсутвие)<br />
    В теле блоков инструкции C# "смешиваются" с розметкой HTML
    критерием раздителния выступают тэги. Если есть необходимость
    обозначить, что инструкция не является кодом, а является розметкой
    к ней стоит добавить префикс &commet;:
</p>
<p>
    @if(x < 10)
    {
        int y = 20;
        <b>Этот блок будет добавлен если x &lt; 10</b>
        y -= 2;
        <i>И y будет иметь значение @y</i>
        @:Конец блока @y
    }
    else
    {
        int y = 30;
        <b>Этот блок будет добавлен если x &ge; 10</b>
        y += 2;
        <i>И y будет иметь значение @y</i>
        @:Конец блока @y
    }
</p>
<p>
    @switch(x)
    {
        case 3:
            <i>x = 3</i>
            break;
        case 5:
            <i>x = 5</i>
            break;
        default:
            <i>x не 3 и не 5</i>
            break;
    }
</p>
<p>
    Операторы повторения
</p>
<ul>
    @for (int i = 0; i < x; i++)
    {
        <li>строка с i = @i</li>
    }
</ul>
@{
    String[] items = { "Item1", "Item21", "Item31", "Item13" };
}
<ol>
    @foreach(String item in items)
    {
        <li>@item</li>
    }
</ol>