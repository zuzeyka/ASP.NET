@{
    ViewData["Title"] = "EmailConfirmation";
}
<div class="text-center">
    <h1 class="display-4">@ViewData["Title"]</h1>
</div>

<p>
    Общий алгоритм подтверждения
</p>
<ul>
    <li>Пользователь вводит Email (при регистрации или в кабинете)</li>
    <li>Система генерирует код подтверждения и отправляет на указаную почту</li>
    <li>Так же код сохраняется в БД для этого пользователя и является доказательством того, 
        что почта не была подтверждена</li>
    <li>При входе на сайт (или в кабинет) информируем пользователя о необходимости подвердить почту</li>
    <li>Разрабатываем форму для введения кода подтверждения</li>
    <li>Разрабатываем страничку, переход в которую происходит из ссылки в электроном письме</li>
    <li>В случае успешного подтверждения убираем из БД код, это есть признаком подверждения почты</li>
</ul>
<p>
    Рекомендация: для каждого проекта создавать отдельный аккаунт, 
    на него реегистрировать все ресурсы проекту (репозитории, инструменты, итд)
    На примере гугл-аккаунтов - создаем новый. 
</p>
<p>
    Для программной работы с почтой необходимо создать пароль приложения
    Этот пароль демотрируется один раз, поэтому рекомендовано подготовить
    место для его хранения
</p>
<ul>
<li>Делаем копию appsettings.json, называем appsettings.example.json</li>
<li>В appsettings.example.json все пароли заменяем на "CHANGE ME" или "****"</li>
<li>Удаляем appsettings.json из репозитория ПКМ - Git - Ignore and Untrack item</li>
<li>Добавляем комментарий в README.md о необходимости заменить appsettings.example.json
         после клонирования репозитория
</li>
<li>Добавляем раздел "Smtp" в appsettings.json</li>
</ul>
<p>
    Достаем конфигурацию та проверяем успешность @ViewData["config"]
    <br />
    Данные из appsettings.json @ViewData["config-json"]
</p>