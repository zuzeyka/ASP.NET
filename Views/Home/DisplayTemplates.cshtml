@model WebApplication1.Models.Home.PassDataModel
@{
    ViewData["Title"] = Model.Header;
}

<div>
    <h1 class="display-4">@Model.Title</h1>
</div>
<p>
    Шаблоны отображения (DispayTemplates) позволяют унифицировать способ отображения определенных типов данных, как основных,
    например String, так и пользовательских типов, как Product. Это уменьшает количество кода,
    убирает повторение кода и "централизирует" изменения.
</p>
<p>
    Шаблоны отображения помещаются в папку DisplayTemlates (название имеет значение)
    розмещеную в Views/[Controller]. Название шаблона - [тип данных].cshtml
</p>

@Html.DisplayFor(m => m.Products[0])

<p>
    Для использования шаблона вызывается "помошник"
    <code>
        &commat;Html.DisplayFor(m => m.Products[0])
    </code>
    Входной параметр <code>m</code> это модель страницы и селектор ее части.
    Если нужна вся модель, то используется <code>m => m</code>.
    Выбор шаблона происходит автоматически если совпадают названия типа данных селектора
    (m.Products[0]) и названия файла шаблона из папки DisplayTemplates.
</p>
<p>
    Если тип данных для шаблона является составным, например, колекция, то сделать
    название файла с таким типом невозможно. В таком случае происходит обращение
    к шаблону по имени
</p>

@Html.DisplayFor(m => m.Products, "Products")

<p>
    Для явного назначения шаблону следует использовать другой параметр ("Products")
    в вызоме помощника
    <code>
        &commat;Htnl.DisplayFor(m => m.Products, "Products")
    </code>
    !! Без этого параметру DisplayFor проробатывает коллекцию, но для каждого
    элементу подставляет одиничный шаблон, не создавая общий контейнер
</p>