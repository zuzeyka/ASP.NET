@model WebApplication1.Models.Home.PassDataModel
@{
    ViewData["Title"] = Model.Header;
}

<div>
    <h1 class="display-4">@Model.Title</h1>
</div>

<p>
    Хотя ASP детализируется как ASP.NET MVC, понимание "модели" у нему
    кое-что отличается от паттерна MVC. В паттерне модель - это архитектурная
    часть программы, предназначеная для передачи данных от контроллера к представлению.
</p>
<p>
    Модели упрощают использование ViewData, инкапсулирающи данные в одном объекте.
    Для внедрении модели необходимо:<br />
    <ul>
        <li>В папке Models создаем папку с именем контроллера (Home)</li>
        <li>В папке Home создаем класс с названием представления (PassDataModel)</li>
        <li>В классе описывает поля/свойства</li>
        <li>В контроллере создаем объект этого класса (var model = new...) и передаем его в вызов View(model)</li>
        <li>В начале представления добавляем инструкцию &commat;model и устанавливаем ее тип</li>
        <li>В теле представления обращаемся к модели через свойство Model</li>
    </ul>
</p>
<p>
    <h1>Home-Work</h1>
    <table>  
    <thead>  
      <tr>  
        <th>Имя</th>  
        <th>Цена</th>  
      </tr>  
    </thead>  
    <tbody>
            @foreach (var item in Model.Products)
            {
            <tr>  
            <td>@item.Name</td>  
            <td>@item.Price.ToString("F2")</td>  
            </tr> 
            }
    </tbody>  
  </table>  
</p>