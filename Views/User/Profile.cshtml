@model WebApplication1.Models.Home.User.ProfileModel
@using System.Security.Claims;
@{
    ViewData["Title"] = "Profile";
}
<div>
    <h1 class="display-4">User profile page</h1>
</div>

<div class="container">
    <div class="main-body">

          <!-- Breadcrumb
          <nav aria-label="breadcrumb" class="main-breadcrumb">
            <ol class="breadcrumb">
              <li class="breadcrumb-item"><a href="index.html">Home</a></li>
              <li class="breadcrumb-item"><a href="javascript:void(0)">User</a></li>
              <li class="breadcrumb-item active" aria-current="page">User Profile</li>
            </ol>
          </nav>
          /Breadcrumb -->

          <div class="row gutters-sm">
            <div class="col-md-4 mb-3">
              <div class="card">
                <div class="card-body">
                  <div class="d-flex flex-column align-items-center text-center">
                     @if (Model.IsEmailConfirmed)
                     {
                        <img src="/avatars/@(Model.Avatar)" 
                            alt="@(Model.Login)" class="rounded-circle" width="150">
                     }
                     else
                     {
                        <img src="/avatars/@(Model.Avatar)" 
                            alt="@(Model.Login)" class="rounded-circle" width="150" style="border: 2px solid red">
                     }
                      <div class="mt-3">
                      <h4 id="name-under-avatar">@(Model.IsRealNamePublic || Model.IsPersonal ? Model.RealName : Model.Login)</h4>
                      <p class="text-secondary mb-1">Full Stack Developer</p>
                      <p class="text-muted font-size-sm">Bay Area, San Francisco, CA</p>
                      <button class="btn btn-primary">Follow</button>
                      <button class="btn btn-outline-primary">Message</button>
                    </div>
                  </div>
                </div>
              </div>
              <div class="card mt-3">
                <ul class="list-group list-group-flush">
                  <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                    <h6 class="mb-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-globe mr-2 icon-inline"><circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line><path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"></path></svg>Website</h6>
                    <span class="text-secondary">https://bootdey.com</span>
                  </li>
                  <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                    <h6 class="mb-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-github mr-2 icon-inline"><path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path></svg>Github</h6>
                    <span class="text-secondary">bootdey</span>
                  </li>
                  <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                    <h6 class="mb-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-twitter mr-2 icon-inline text-info"><path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"></path></svg>Twitter</h6>
                    <span class="text-secondary">bootdey</span>
                  </li>
                  <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                    <h6 class="mb-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-instagram mr-2 icon-inline text-danger"><rect x="2" y="2" width="20" height="20" rx="5" ry="5"></rect><path d="M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"></path><line x1="17.5" y1="6.5" x2="17.51" y2="6.5"></line></svg>Instagram</h6>
                    <span class="text-secondary">bootdey</span>
                  </li>
                  <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                    <h6 class="mb-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-facebook mr-2 icon-inline text-primary"><path d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"></path></svg>Facebook</h6>
                    <span class="text-secondary">bootdey</span>
                  </li>
                </ul>
              </div>
            </div>
            <div class="col-md-8">
              <div class="card mb-3">
                <div class="card-body">
                  <div class="row">
                    <div class="col-sm-3">
                      <h6 class="mb-0">Full Name</h6>
                    </div>
                      @if(Model.IsRealNamePublic || Model.IsPersonal)
                      {
                              <div class="col-sm-8 text-secondary" id="realname">@Model.RealName</div>
                      }
                      else
                      {
                              <div class="col-sm-8 text-secondary" id="realname">Name is private</div>
                      }
                      <div class="col-sm-1">
                          @if (Model.IsPersonal)
                          {
                              <img src="~/img/icons/pencil.svg" role="button" data-ref-field="realname"/>
                          }
                      </div>
                  </div>
                  <hr>
                  <div class="row">
                    <div class="col-sm-3">
                      <h6 class="mb-0">
                          Email
                          @if (Model.IsPersonal)
                          {
                              if (Model.IsEmailConfirmed)
                              {
                                  <img src="~/img/icons/person-check.svg"
                                  alt="+"
                                  class="mb-1 filter-color-green">
                              }
                              else
                              {
                                  <img src="~/img/icons/person-slash.svg"
                                  alt="+"
                                  class="mb-1 filter-color-candy"
                                  role="button"
                                  data-bs-toggle="modal" data-bs-target="#confirmModal">
                              }
                          }
                      </h6>
                    </div>
                    @if (Model.IsEmailPublic || Model.IsPersonal)
                    {
                       <div id="email" class="col-sm-8 text-secondary">@Model.Email</div>
                    }
                    else
                    {
                       <div id="email" class="col-sm-8 text-secondary">Email is private</div>
                    }
                    <div class="col-sm-1">
                        @if (Model.IsPersonal)
                        {
                              <img src="~/img/icons/pencil.svg" role="button" data-ref-field="email"/>
                        }
                      </div>
                  </div>
                  <hr>
                  <div class="row">
                    <div class="col-sm-3">
                      <h6 class="mb-0">Phone</h6>
                    </div>
                    <div class="col-sm-8 text-secondary">
                      (239) 816-9029
                    </div>
                    <div class="col-sm-1">
                        @if (Model.IsPersonal)
                        {
                          <img src="~/img/icons/pencil.svg"/>
                        }
                      </div>
                  </div>
                  <hr>
                  <div class="row">
                    <div class="col-sm-3">
                      <h6 class="mb-0">Mobile</h6>
                    </div>
                    <div class="col-sm-8 text-secondary">
                      (320) 380-4539
                    </div>
                    <div class="col-sm-1">
                        @if (Model.IsPersonal)
                        {
                          <img src="~/img/icons/pencil.svg"/>
                        }
                      </div>
                  </div>
                  <hr>
                  <div class="row">
                    <div class="col-sm-3">
                      <h6 class="mb-0">Address</h6>
                    </div>
                    <div class="col-sm-8 text-secondary">
                      Bay Area, San Francisco, CA
                    </div>
                    <div class="col-sm-1">
                        @if (Model.IsPersonal)
                        {
                          <img src="~/img/icons/pencil.svg"/>
                        }
                      </div>
                  </div>
                  <hr>
                  @*<div class="row">
                    <div class="col-sm-12">
                      <a class="btn btn-info " target="__blank" href="https://www.bootdey.com/snippets/view/profile-edit-data-and-skills">Edit</a>
                    </div>*@
                  </div>
                </div>
              </div>

              <div class="row gutters-sm">
                <div class="col-sm-6 mb-3">
                  <div class="card h-100">
                    <div class="card-body">
                      <h6 class="d-flex align-items-center mb-3"><i class="material-icons text-info mr-2">assignment</i>Project Status</h6>
                      <small>Web Design</small>
                      <div class="progress mb-3" style="height: 5px">
                        <div class="progress-bar bg-primary" role="progressbar" style="width: 80%" aria-valuenow="80" aria-valuemin="0" aria-valuemax="100"></div>
                      </div>
                      <small>Website Markup</small>
                      <div class="progress mb-3" style="height: 5px">
                        <div class="progress-bar bg-primary" role="progressbar" style="width: 72%" aria-valuenow="72" aria-valuemin="0" aria-valuemax="100"></div>
                      </div>
                      <small>One Page</small>
                      <div class="progress mb-3" style="height: 5px">
                        <div class="progress-bar bg-primary" role="progressbar" style="width: 89%" aria-valuenow="89" aria-valuemin="0" aria-valuemax="100"></div>
                      </div>
                      <small>Mobile Template</small>
                      <div class="progress mb-3" style="height: 5px">
                        <div class="progress-bar bg-primary" role="progressbar" style="width: 55%" aria-valuenow="55" aria-valuemin="0" aria-valuemax="100"></div>
                      </div>
                      <small>Backend API</small>
                      <div class="progress mb-3" style="height: 5px">
                        <div class="progress-bar bg-primary" role="progressbar" style="width: 66%" aria-valuenow="66" aria-valuemin="0" aria-valuemax="100"></div>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="col-sm-6 mb-3">
                  <div class="card h-100">
                    <div class="card-body">
                      <h6 class="d-flex align-items-center mb-3"><i class="material-icons text-info mr-2">assignment</i>Project Status</h6>
                      <small>Web Design</small>
                      <div class="progress mb-3" style="height: 5px">
                        <div class="progress-bar bg-primary" role="progressbar" style="width: 80%" aria-valuenow="80" aria-valuemin="0" aria-valuemax="100"></div>
                      </div>
                      <small>Website Markup</small>
                      <div class="progress mb-3" style="height: 5px">
                        <div class="progress-bar bg-primary" role="progressbar" style="width: 72%" aria-valuenow="72" aria-valuemin="0" aria-valuemax="100"></div>
                      </div>
                      <small>One Page</small>
                      <div class="progress mb-3" style="height: 5px">
                        <div class="progress-bar bg-primary" role="progressbar" style="width: 89%" aria-valuenow="89" aria-valuemin="0" aria-valuemax="100"></div>
                      </div>
                      <small>Mobile Template</small>
                      <div class="progress mb-3" style="height: 5px">
                        <div class="progress-bar bg-primary" role="progressbar" style="width: 55%" aria-valuenow="55" aria-valuemin="0" aria-valuemax="100"></div>
                      </div>
                      <small>Backend API</small>
                      <div class="progress mb-3" style="height: 5px">
                        <div class="progress-bar bg-primary" role="progressbar" style="width: 66%" aria-valuenow="66" aria-valuemin="0" aria-valuemax="100"></div>
                      </div>
                    </div>
                  </div>
                </div>
               </div>
          </div>
  </div>
</div>

<!-- Modal -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="confirmModalLabel">Enter email code</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="input-group mb-3">
            <span class="input-group-text" id="confirm-addon">Code:</span>
            <input id="confirm-email-input" type="text" class="form-control" placeholder="Code from email" 
            aria-describedby="confirm-addon">
</div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="confirm-email-button">Confirm</button>
      </div>
    </div>
  </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        for( let pencil of document.querySelectorAll("[data-ref-field]") ) {
            pencil.addEventListener("click", editClick);
        }
        const confirmEmailButton = document.getElementById("confirm-email-button");
        if (confirmEmailButton) confirmEmailButton.addEventListener("click", confirmEmailButtonClick)
        else console.error("Element not found: 'confirm-email-button'")
    });
    function editClick(e) {
        const targetId = e.target.getAttribute("data-ref-field");
        // console.log(targetId);
        // e.target - <img.../> - елемент, по якому клік, міняємо зображення
        e.target.oldSrc = e.target.src;
        e.target.src = "/img/icons/save.svg";
                        // "../../img/icons/save.svg" - відносний шлях, при зміні адреси (даної сторінки) стане не валідним
                        // "~/img/icons/save.svg"; неправильно, ~ - символ Razor
                        // "wwwroot/img/icons/save.svg" неправильно, wwwroot - корень сайту
        const targetElement = document.getElementById(targetId);
        // targetElement - <span id="realname"...>
        targetElement.setAttribute("contenteditable", "true");
        targetElement.focus();
        targetElement.onblur = editingFinished;
        targetElement.onkeydown = editingKeydown;
        // зберігаємо початковий стан (текст) як поле цього ж об'єкту (oldText)
        targetElement.oldText = targetElement.innerText;
        // знімаємо з кнопки click (відновимо після editingFinished)
        e.target.removeEventListener("click", editClick);
    }
    function editingFinished(e) {
        const elem = e.target;  // e.target -- targetElement - <span id="realname"...>
        if( elem.innerText != elem.oldText && confirm( "Зберегти зміни?" ) ) {
            const data = {  // формуємо дані за серверною моделлю (UpdateRequestModel)
                field: elem.id,
                value: elem.innerText
            };
            const dataStr = JSON.stringify(data);  // серіалізуємо дані
            console.log("Sending " + dataStr);
            window.fetch("/User/Update", {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json"
                },
                body: dataStr
            })
            .then(r => {
                // r - response, объект, который отвечает за первичный пакет HTTP
                // на данном этапе можно узнать статус-код ответа, заголовки
                if(r.status != 200){
                    alert("Responce unsuccessfull");
                    elem.innerText = elem.oldText;
                    return;
                }
                // но для получения тела пакета следует запустить его получатель
                return r.json(); // или r.text() / r.arrayBuffer() / r.blob()
            })
            .then(j => {
                console.log(j);
                if(j.status != "OK"){ // тут j.status - поле из объекта, что в теле ответа
                    alert(j.data);
                    // возобновить начальные данные (отменить изменение)
                }
                else{
                    // продублировать изменение во всех полях с данным парамметром
                }
            });
        }
        elem.removeAttribute("contenteditable");
        // відновлюємо зображення на кнопці-edit
        const img = document.querySelector(`[data-ref-field=${elem.id}]`);
        img.src = img.oldSrc;
        // відновлюємо click на кнопці, але з затримкою
        setTimeout(() => img.addEventListener("click", editClick), 250);
        if(elem === document.getElementById("realname")){
            const avatarName = document.getElementById("name-under-avatar");
            avatarName.innerText = elem.innerText;
        }
        
    }
    function editingKeydown(e) {
        if(e.key == "Enter") {
            e.target.blur();
        }
    }

    function confirmEmailButtonClick(){
        const confirmEmailInput = document.getElementById("confirm-email-input");
        if (! confirmEmailInput) throw "Element not found: 'confirm-email-input' ";
        const emailCode = confirmEmailInput.value;
        if(emailCode.lenght === 0){
            alert("Code can't be empty");
            return;
        }
        window.fetch("/User/ConfirmEmail",{
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(emailCode)
        })
        .then(r => r.json())
        .then(j => {
            console.log(j);
            if(j.status == "200"){
                window.location.reload();
            }
            else{
                alert(j.data);
            }
        });
    }
</script>